#!/bin/bash
#https://google.github.io/styleguide/shell.xml

set -aeuo pipefail

set_env(){
    echo 'app name:'
    read app_name

    sed -i '' "s/.*APP_NAME.*/APP_NAME=$app_name/" .env

    echo 'database name:'
    read database_name

    sed -i '' "s/.*DB_DATABASE.*/DB_DATABASE=$database_name/" .env
    sed -i '' "s/.*MYSQL_DATABASE.*/MYSQL_DATABASE=$database_name/" laradock/.env
}

set_elasticsearch(){
    echo 'Install elasticsearch? y/n'
    read install_elasticsearch

    if [ $install_elasticsearch = 'y' ] || [ $install_elasticsearch = 'yes' ]
    then
        containers="$containers elasticsearch"
    fi
}

set_composer(){
    echo 'Change composer default repo? y/n'
    echo 'You should change this if you are in China'

    read change_repo

    if [ $change_repo = 'y' ] || [ $change_repo = 'yes' ]
    then
        ./ws composer config -g repo.packagist composer https://packagist.phpcomposer.com
        echo 'composer repo changed to https://packagist.phpcomposer.com'
    fi
}

if [ ! -z "$(docker ps -q)" ]
then
    echo 'This will create standalone container for single project setup. All running containers will be stopped.'
    echo 'Press 1 to continue or 2 to exit'

    select yn in "Continue" "Exit"; do
        case $yn in
            Continue) break;;
            Exit) exit;;
        esac
    done
    echo 'Stopping all running containers'
    docker kill $(docker ps -q)
fi

containers='nginx mysql workspace'

set_env
source .env

set_elasticsearch

sed -i '' "s/.*DOCKER_CONTAINERS.*/DOCKER_CONTAINERS=\"$containers\"/" .env

echo "Installing containers for services: $containers"
./dc up

set_composer

rm -f src/.keep

if [ "$(ls -A src)" ]
then
    ./ws composer install
else
    echo "Installing Laravel"
    ./ws composer create-project --prefer-dist laravel/laravel .
fi

mkdir -p src/bootstrap/cache src/storage src/storage/framework
chmod -R 775 src/storage src/bootstrap/cache

cp .env src/
./ws php artisan key:generate
./ws php artisan storage:link

